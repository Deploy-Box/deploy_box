name: Build and Push Docker image to Azure

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev

permissions:
  id-token: write
  contents: read

jobs:
  migrations:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r Website/requirements.txt

      - name: Run migrations
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DEPLOY_BOX_GITHUB_TOKEN_KEY: ${{ secrets.DEPLOY_BOX_GITHUB_TOKEN_KEY }}
        run: |
          source venv/bin/activate
          python Website/manage.py makemigrations
          python Website/manage.py migrate

  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    env:
      STACK: ${{ vars.STACK }}
      ACR_NAME: ${{ vars.ACR_NAME }}
      CONTAINER_APP_NAME: ${{ vars.CONTAINER_APP_NAME }}
      RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: az acr login --name $ACR_NAME

      - name: Build and Push Website Docker image to Azure
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          IMAGE_NAME=$ACR_NAME.azurecr.io/$STACK-website:$IMAGE_TAG

          docker build -t $IMAGE_NAME Website/
          docker push $IMAGE_NAME

      - name: Deploy to Azure Container Apps
        run: |
          # Get the ACR credentials
          ACR_USERNAME=$(az acr credential show --name $ACR_NAME --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show --name $ACR_NAME --query "passwords[0].value" -o tsv)

          az containerapp registry set \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --server $ACR_NAME.azurecr.io \
            --username $ACR_USERNAME \
            --password $ACR_PASSWORD

          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          IMAGE_NAME=$ACR_NAME.azurecr.io/$STACK-website:$IMAGE_TAG

          az containerapp update \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --image $IMAGE_NAME
