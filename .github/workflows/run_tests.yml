name: Tests (dev â†’ prod PR)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [prod]

concurrency:
  group: pr-to-prod-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  run-tests:
    # Only run if the PR base is prod AND the head branch is dev
    if: ${{ github.event.pull_request.base.ref == 'prod' && github.event.pull_request.head.ref == 'dev' }}
    runs-on: ubuntu-latest

    env:
      # Django/pytest env you need for tests (adjust as needed)
      DJANGO_SETTINGS_MODULE: website.settings  # or your settings module
      # If your tests touch Stripe or other APIs, set fake keys here or in repo secrets:
      STRIPE_SECRET_KEY: "sk_test_dummy"
      # If your code loads settings from JSON/config, consider test-safe toggles:
      CI: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


      - name: Run migrations
        run: |
          python manage.py migrate --noinput

      - name: Run tests
        # If you use pytest: `pytest -q`
        run: |
          python manage.py test --verbosity 2
